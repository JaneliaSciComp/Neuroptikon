Generators - Directed Graphs
----------------------------

>>> from networkx import *
>>> from networkx.generators.directed import *


Smoke test the random graphs
----------------------------

>>> G=gn_graph(100)
>>> G=gnr_graph(100,0.5)
>>> G=gnc_graph(100)
>>> G=scale_free_graph(100)

Test create_using keyword arguments
-----------------------------------
>>> G=gn_graph(100,create_using=Graph())
Traceback (most recent call last):
...
NetworkXError: Directed Graph required in create_using
>>> G=gnr_graph(100,0.5,create_using=Graph())
Traceback (most recent call last):
...
NetworkXError: Directed Graph required in create_using
>>> G=gnc_graph(100,create_using=Graph())
Traceback (most recent call last):
...
NetworkXError: Directed Graph required in create_using
>>> G=scale_free_graph(100,create_using=Graph())
Traceback (most recent call last):
...
NetworkXError: MultiDiGraph required in create_using

>>> G=gn_graph(100,seed=1)
>>> MG=gn_graph(100,create_using=MultiDiGraph(),seed=1)
>>> G.edges()==MG.edges()
True
>>> G=gnr_graph(100,0.5,seed=1)
>>> MG=gnr_graph(100,0.5,create_using=MultiDiGraph(),seed=1)
>>> G.edges()==MG.edges()
True
>>> G=gnc_graph(100,seed=1)
>>> MG=gnc_graph(100,create_using=MultiDiGraph(),seed=1)
>>> G.edges()==MG.edges()
True
